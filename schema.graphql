type VoxoSamaritan @entity {
  # user address 
  id: ID!


  # current collection count
  troveCount: Int
  # user current collection 
  trove: [Int!]!
  
  # historical count of unique token owned by this user
  holdHistCount: Int
  # user historical collection 
  hodlHist: [Int!]!
  # mint history for user 
  
  # number of minted tokens
  mintCount: Int
  mintHist: [MintEvent!]! @derivedFrom(field: "user")

  # number of burned tokens
  burnedCount: Int
  burnedHist: [BurnEvent!]! @derivedFrom(field: "user")
}

type VoxoStats @entity {
  # always 1
  id: ID!
  # the number of voxos minted all time 
  totalMinted: Int!
  # the number of voxos burned all time 
  totalBurned: Int!
  # list of all historical holders 
  histHodlers: [Bytes!]!
  # list of current owners 
  currentHodlers: [Bytes!]!
}

enum EventType {
  MINT
  BURN

}

interface Event {
  # transaction hash of event 
  id: ID!
  # either of mint and burn
  type: EventType!
  # block number of event
  blockNumber: BigInt!
  # timestamp of event 
  timestamp: BigInt! 
  # performer of event
  user: VoxoSamaritan! 
  # Affected tokenId 
  tokenId: Int! 
}

type MintEvent implements Event @entity {
  # transaction hash of mint event 
  id: ID!
  # block number of mint event
  blockNumber: BigInt!
  # timestamp of mint event 
  timestamp: BigInt! 
  # user who minted the voxo 
  user: VoxoSamaritan! 
  # tokenId of Voxo minted 
  tokenId: Int! 
}

type BurnEvent implements Event @entity {
  # transaction hash of burn event 
  id: ID!
  # block number of burn event
  blockNumber: BigInt!
  # timestamp of burn event 
  timestamp: BigInt! 
  # user who burned the voxo 
  user: VoxoSamaritan! 
  # tokenId of Voxo burned 
  tokenId: Int! 
}
